## Concord Agent Pool definition
##
## "%%var%%" are template variables which will be replaced by the operator
##
## %%configMapName%% - name of the ConfigMap resource used by the Agent's pod
## %%podName%% - Agent's pod name
## %%app%% - the operator's label
## %%poolName%% - name of the pool, the operator automatically uses the CR's name as the pool name
## %%concordCfgHash%% - configuration hash
## %%preStopHook%% - content of the preStop script

apiVersion: concord.walmartlabs.com/v1alpha1
kind: AgentPool
metadata:
  name: agentpool-default
spec:
  queueSelector:
    agent:
      flavor: "k8s"

  autoScale: {{ .Values.agent.autoscaler.enabled }}
  size: {{ .Values.agent.autoscaler.initSize }}
  minSize: {{ .Values.agent.autoscaler.minSize }}
  maxSize: {{ .Values.agent.autoscaler.maxSize }}

  configMap:
    apiVersion: v1
    kind: ConfigMap
    metadata:
      name: "%%configMapName%%"
    data:
      preStopHook.sh: "%%preStopHook%%"
{{ (tpl (.Files.Glob "files/agent/agent.conf").AsConfig . ) | indent 6 }}
{{ (tpl (.Files.Glob "files/common/mvn.json").AsConfig . ) | indent 6 }}

  pod:
    apiVersion: v1
    kind: Pod
    metadata:
      name: "%%podName%%"
      labels:
        app: "%%app%%"
        poolName: "%%poolName%%"
        concordCfgHash: "%%concordCfgHash%%"
    spec:
      serviceAccountName: {{ template "concord.serviceAccountName" . }}
      terminationGracePeriodSeconds: 3600
      {{- include "imagePullSecretName" . | nindent 6 }}
      containers:
        - name: dind
          image: {{ .Values.dind.image.repository }}:{{ .Values.dind.image.tag }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          command: {{ .Values.dind.image.command }}
          args: {{ .Values.dind.image.args }}
          resources:
            requests:
              cpu: {{ .Values.dind.resources.requests.cpu }}
              memory: {{ .Values.dind.resources.requests.memory }}
            limits:
              cpu: {{ .Values.dind.resources.limits.cpu }}
              memory: {{ .Values.dind.resources.limits.memory }}
          volumeMounts:
            - name: "process-tmp"
              mountPath: "/tmp"
            - mountPath: "/hooks/preStopHook.sh"
              name: cfg
              subPath: preStopHook.sh
          securityContext:
            privileged: true
          lifecycle:
            preStop:
              exec:
                command:
                  - "sh"
                  - "/hooks/preStopHook.sh"

        - name: agent
          {{- if .Values.agentImageOverride }}
          image: {{ .Values.agentImageOverride }}
          {{- else }}
          image: {{ .Values.registry }}/{{ .Values.agentImageName }}:{{ .Values.version }}
          {{- end }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          volumeMounts:
            - mountPath: "/opt/concord/conf/agent.conf"
              name: cfg
              subPath: agent.conf
            - mountPath: "/opt/concord/conf/mvn.json"
              name: cfg
              subPath: mvn.json
            - mountPath: "/opt/concord/hooks/preStopHook.sh"
              name: cfg
              subPath: preStopHook.sh
            - mountPath: "/tmp"
              name: process-tmp
          resources:
            requests:
              cpu: {{ .Values.agent.resources.requests.cpu }}
              memory: {{ .Values.agent.resources.requests.memory }}
            limits:
              cpu: {{ .Values.agent.resources.limits.cpu }}
              memory: {{ .Values.agent.resources.limits.memory }}
          env:
            - name: CONCORD_TMP_DIR
              value: "/tmp/concord"
            - name: CONCORD_DOCKER_LOCAL_MODE
              value: "false"
            - name: DOCKER_HOST
              value: "tcp://localhost:6666"
            - name: CONCORD_CFG_FILE
              value: "/opt/concord/conf/agent.conf"
            - name: CONCORD_MAVEN_CFG
              value: "/opt/concord/conf/mvn.json"
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: MY_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: MY_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: USER_AGENT
              value: "k8s-agent $(MY_POD_NAMESPACE)/$(MY_POD_NAME) @ $(MY_POD_IP)"
            {{- range $key, $val := .Values.agent.env }}
            - name: {{ $key }}
              value: {{ $val | quote }}
            {{- end }}
          lifecycle:
            preStop:
              exec:
                command:
                  - "sh"
                  - "/opt/concord/hooks/preStopHook.sh"
      volumes:
        - name: cfg
          configMap:
            name: "%%configMapName%%"
        - name: process-tmp
          emptyDir: { }
